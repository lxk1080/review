

10、算法 ........................................................................................
    -- 排序
    -- 堆栈、队列、链表
    -- 递归
    -- 波兰式和逆波兰式


5、MVVM框架 ................................................................................................
    --双向绑定
        defineProperty
        /js/双向绑定js核心api.js
    --设计模式
        观察者模式
        /js/观察者模式(双向绑定核心设计模式).html
    --生命周期
        vue生命周期.jpg
        /js/vue生命周期.html
        /resource/vue/详解vue生命周期.html
    --源码分析
        data: 要监听的对象
        Observer: 监听器
        dep: 订阅者列表，存储着watcher对象，对应着data对象某一个key值（每个key值有着独立的dep对象）
        watcher: 订阅者对象
        流程：--Observer监听者data对象，data对象发生改变时，Observer通知dep对象，dep遍历自身所有的watcher，
               告诉 watcher data对象发生了改变，watcher得到了消息后，调用自身的更新函数，以获得data对象更新后的
               数据
        编译：--先将所有节点转化为dom片段（documentFragment），在dom片段中编译模板（vue指令、事件、表达式...），
               再将编译好的html一次性挂载到真正的dom上
             --在编译过程中如果遇到data对象中监听的属性，则会实例化一个watcher对象，实例化过程中会将此对象添加到
               该属性对应的watcher列表（dep）中，以后该属性的值改变时，此watcher对象会得到通知并进行dom的更新
        参见：/mvvm



