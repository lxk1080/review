
/* table-cell元素自身的垂直居中   */
.ta{
	width: 300px;
	height: 200px;
	border: red solid 1px;
	display: table-cell;
	vertical-align: middle;  /* table-cell元素要设置自身垂直局中，里面的元素才会居中，比较特殊  */
}
.img1{
	width: 200px;
}

/* 图片垂直居中  */
.p{
	width: 300px;
	border: solid 1px;
	line-height: 200px;  /* 设置图片自带空白字符的行高，此时空白字符处于垂直居中的位置  */
}
.img{
	width: 200px;
	vertical-align: middle; /* 设置图片中线与空白字符的基线+(1/2 x的高度)的位置对齐  */
}

/* 块级元素的垂直居中  */
.out{
	width: 300px;
	border: red solid 1px;
	line-height: 200px;  /* 1. 父容器要有行高，目的是为了让空白字符处于居中位置  */
	font-size: 0;  /* 此时x的height为0，基线与中线重合，基线+(1/2 x height)=基线=中线，实现完全垂直居中  */
}
.inner{
	border: blue solid 1px;
	display: inline-block;  /* 2. 将块元素显示为内联元素（因为vertical-align只支持内联元素），并让其自带空白字符  */
	vertical-align: middle;  /* 3. 设置中线对齐  */
}
.img2{
	width: 200px;
	display: block; /* 清除底部空隙（块级元素没有基线，自然不会与图片自带的空白符基线对齐）  */
}

/* inline-block元素基线对齐  */
/* 我们看到的元素包含文字，事实上元素包含的并不是文字，而是包含的一行（行高），只不过默认的行高就是font-size的值，而文字是一直处于行高的中心下沉位置，
 * 当行高为0时，行高无限接近于一条线，此时元素的上边缘与这条线近乎重叠，所以看起来元素的上边缘正处于文字的中心下沉位置，这时虽然行高为0，但是文字依然属于元素，
 * 文字是内联元素，所以这个元素的基线依然是文字的基线
 */
.span{
	display: inline-block; 
	width: 100px;
	height: 100px;
	border: red solid 1px;
	line-height: 0;
}

